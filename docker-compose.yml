version: '3.8'

services:
  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network

  # Redis Service
  redis:
    image: redis:6
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # PostgreSQL Service
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  # MongoDB Service
  mongo:
    image: mongo:4.4
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  # Gateway Microservice
  gateway-microservice:
    build:
      context: ./gateway-microservice
      dockerfile: Dockerfile
    env_file:
      - ./gateway-microservice/env/production.env
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - app-network

  # User Microservice
  user-microservice:
    build:
      context: ./user-microservice
      dockerfile: Dockerfile
    env_file:
      - ./user-microservice/env/production.env
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network

  # Account Microservice
  account-microservice:
    build:
      context: ./account-microservice
      dockerfile: Dockerfile
    env_file:
      - ./account-microservice/env/production.env
    depends_on:
      - rabbitmq
      - postgres
    networks:
      - app-network

  # Report Microservice
  report-microservice:
    build:
      context: ./report-microservice
      dockerfile: Dockerfile
    env_file:
      - ./report-microservice/env/production.env
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - app-network

  # Transaction Microservice
  transaction-microservice:
    build:
      context: ./transaction-microservice
      dockerfile: Dockerfile
    env_file:
      - ./transaction-microservice/env/production.env
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - app-network

# Volumes for persistent storage
volumes:
  rabbitmq-data:
  redis-data:
  postgres-data:
  mongo-data:

# Custom Network
networks:
  app-network:
    driver: bridge